{"version":3,"sources":["node_modules/open-simplex-noise/lib/constants.js","node_modules/open-simplex-noise/lib/index.js","node_modules/runes/index.js","src/index.js"],"names":["HIGH_SURROGATE_START","HIGH_SURROGATE_END","LOW_SURROGATE_START","REGIONAL_INDICATOR_START","REGIONAL_INDICATOR_END","FITZPATRICK_MODIFIER_START","FITZPATRICK_MODIFIER_END","VARIATION_MODIFIER_START","VARIATION_MODIFIER_END","DIACRITICAL_MARKS_START","DIACRITICAL_MARKS_END","ZWJ","GRAPHEMS","runes","string","Error","result","i","increment","length","isGraphem","nextUnits","isVariationSelector","isDiacriticalMark","isZeroWidthJoiner","push","substring","current","isFirstOfSurrogatePair","currentPair","nextPair","isRegionalIndicator","isFitzpatrickModifier","betweenInclusive","charCodeAt","codePointFromSurrogatePair","indexOf","pair","value","lower","upper","start","width","chars","undefined","rest","endIndex","slice","join","module","exports","substr","openSimplex","OpenSimplexNoise","Date","now","phrases","colors","text","Math","floor","random","font","splitText","letters","maxLetterWidth","dpr","window","devicePixelRatio","backgroundColor","textColor","canvas","document","createElement","context","getContext","textCanvas","textContext","drawText","fillStyle","textBaseline","textAlign","forEach","letter","max","measureText","height","textWidth","fillText","resize","innerWidth","innerHeight","style","raf","loop","delta","requestAnimationFrame","save","globalAlpha","fillRect","restore","divisionWidth","divisionHeight","letterPosition","y","x","sinX","sin","sinY","cos","x1","y1","scale","noise3D","translate","rotate","PI","drawImage","body","appendChild","addEventListener"],"mappings":";;;AAAA,aACA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IACA,QAAA,QAAA,EAAA,GACA,QAAA,QAAA,EAAA,IACA,QAAA,QAAA,EAAA,GACA,QAAA,WAAA,KAAA,KAAA,GAAA,GAAA,EACA,QAAA,WAAA,KAAA,KAAA,GAAA,GAAA,EACA,QAAA,WAAA,KAAA,KAAA,GAAA,GAAA,EACA,QAAA,YAAA,EAAA,KAAA,KAAA,GAAA,GAAA,EACA,QAAA,YAAA,EAAA,KAAA,KAAA,GAAA,GAAA,EACA,QAAA,YAAA,EAAA,KAAA,KAAA,GAAA,GAAA,EACA,QAAA,OAAA,CACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,QAAA,OAAA,CACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,QAAA,OAAA,CACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGA,QAAA,YAAA,CACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GAEA,QAAA,YAAA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,IACA,IACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,IACA,EACA,EACA,GACA,GACA,EACA,GACA,EACA,IACA,GACA,GACA,GACA,EACA,IACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,IACA,EACA,EACA,GACA,IACA,IACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,EACA,GACA,IACA,EACA,GACA,GACA,IAEA,QAAA,YAAA,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAEA,QAAA,cAAA,CACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,GAEA,QAAA,cAAA,CACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,EACA,KACA,EACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,EACA,KACA,GAEA,QAAA,chuGA,aACA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IACA,IAAA,EAAA,QAAA,eACA,EAAA,WAOA,OANA,SAAA,EAAA,EAAA,GACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EACA,KAAA,IAAA,GALA,GASA,EAAA,WASA,OARA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EACA,KAAA,IAAA,EACA,KAAA,IAAA,GAPA,GAWA,EAAA,WAWA,OAVA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EAAA,EAAA,EAAA,UACA,KAAA,IAAA,EACA,KAAA,IAAA,EACA,KAAA,IAAA,EACA,KAAA,IAAA,GATA,GAaA,SAAA,EAAA,G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","file":"src.a5e9ac92.js","sourceRoot":"..","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NORM_2D = 1.0 / 47.0;\nexports.NORM_3D = 1.0 / 103.0;\nexports.NORM_4D = 1.0 / 30.0;\nexports.SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\nexports.SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\nexports.SQUISH_4D = (Math.sqrt(4 + 1) - 1) / 4;\nexports.STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\nexports.STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\nexports.STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) / 4;\nexports.base2D = [\n    [1, 1, 0, 1, 0, 1, 0, 0, 0],\n    [1, 1, 0, 1, 0, 1, 2, 1, 1]\n];\nexports.base3D = [\n    [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\n    [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\n    [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1]\n];\nexports.base4D = [\n    [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\n    [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\n    [\n        1,\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1,\n        2,\n        1,\n        1,\n        0,\n        0,\n        2,\n        1,\n        0,\n        1,\n        0,\n        2,\n        1,\n        0,\n        0,\n        1,\n        2,\n        0,\n        1,\n        1,\n        0,\n        2,\n        0,\n        1,\n        0,\n        1,\n        2,\n        0,\n        0,\n        1,\n        1\n    ],\n    [\n        3,\n        1,\n        1,\n        1,\n        0,\n        3,\n        1,\n        1,\n        0,\n        1,\n        3,\n        1,\n        0,\n        1,\n        1,\n        3,\n        0,\n        1,\n        1,\n        1,\n        2,\n        1,\n        1,\n        0,\n        0,\n        2,\n        1,\n        0,\n        1,\n        0,\n        2,\n        1,\n        0,\n        0,\n        1,\n        2,\n        0,\n        1,\n        1,\n        0,\n        2,\n        0,\n        1,\n        0,\n        1,\n        2,\n        0,\n        0,\n        1,\n        1\n    ]\n];\nexports.gradients2D = [\n    5,\n    2,\n    2,\n    5,\n    -5,\n    2,\n    -2,\n    5,\n    5,\n    -2,\n    2,\n    -5,\n    -5,\n    -2,\n    -2,\n    -5\n];\nexports.gradients3D = [\n    -11,\n    4,\n    4,\n    -4,\n    11,\n    4,\n    -4,\n    4,\n    11,\n    11,\n    4,\n    4,\n    4,\n    11,\n    4,\n    4,\n    4,\n    11,\n    -11,\n    -4,\n    4,\n    -4,\n    -11,\n    4,\n    -4,\n    -4,\n    11,\n    11,\n    -4,\n    4,\n    4,\n    -11,\n    4,\n    4,\n    -4,\n    11,\n    -11,\n    4,\n    -4,\n    -4,\n    11,\n    -4,\n    -4,\n    4,\n    -11,\n    11,\n    4,\n    -4,\n    4,\n    11,\n    -4,\n    4,\n    4,\n    -11,\n    -11,\n    -4,\n    -4,\n    -4,\n    -11,\n    -4,\n    -4,\n    -4,\n    -11,\n    11,\n    -4,\n    -4,\n    4,\n    -11,\n    -4,\n    4,\n    -4,\n    -11\n];\nexports.gradients4D = [\n    3,\n    1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    1,\n    1,\n    1,\n    3,\n    -3,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    -1,\n    1,\n    1,\n    1,\n    -3,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    -3,\n    -1,\n    1,\n    1,\n    -1,\n    -3,\n    1,\n    1,\n    -1,\n    -1,\n    3,\n    1,\n    -1,\n    -1,\n    1,\n    3,\n    3,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    -1,\n    1,\n    1,\n    1,\n    -3,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    -3,\n    1,\n    -1,\n    1,\n    -1,\n    3,\n    -1,\n    1,\n    -1,\n    1,\n    -3,\n    1,\n    -1,\n    1,\n    -1,\n    3,\n    3,\n    -1,\n    -1,\n    1,\n    1,\n    -3,\n    -1,\n    1,\n    1,\n    -1,\n    -3,\n    1,\n    1,\n    -1,\n    -1,\n    3,\n    -3,\n    -1,\n    -1,\n    1,\n    -1,\n    -3,\n    -1,\n    1,\n    -1,\n    -1,\n    -3,\n    1,\n    -1,\n    -1,\n    -1,\n    3,\n    3,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    -1,\n    1,\n    1,\n    1,\n    -3,\n    -3,\n    1,\n    1,\n    -1,\n    -1,\n    3,\n    1,\n    -1,\n    -1,\n    1,\n    3,\n    -1,\n    -1,\n    1,\n    1,\n    -3,\n    3,\n    -1,\n    1,\n    -1,\n    1,\n    -3,\n    1,\n    -1,\n    1,\n    -1,\n    3,\n    -1,\n    1,\n    -1,\n    1,\n    -3,\n    -3,\n    -1,\n    1,\n    -1,\n    -1,\n    -3,\n    1,\n    -1,\n    -1,\n    -1,\n    3,\n    -1,\n    -1,\n    -1,\n    1,\n    -3,\n    3,\n    1,\n    -1,\n    -1,\n    1,\n    3,\n    -1,\n    -1,\n    1,\n    1,\n    -3,\n    -1,\n    1,\n    1,\n    -1,\n    -3,\n    -3,\n    1,\n    -1,\n    -1,\n    -1,\n    3,\n    -1,\n    -1,\n    -1,\n    1,\n    -3,\n    -1,\n    -1,\n    1,\n    -1,\n    -3,\n    3,\n    -1,\n    -1,\n    -1,\n    1,\n    -3,\n    -1,\n    -1,\n    1,\n    -1,\n    -3,\n    -1,\n    1,\n    -1,\n    -1,\n    -3,\n    -3,\n    -1,\n    -1,\n    -1,\n    -1,\n    -3,\n    -1,\n    -1,\n    -1,\n    -1,\n    -3,\n    -1,\n    -1,\n    -1,\n    -1,\n    -3\n];\nexports.lookupPairs2D = [\n    0,\n    1,\n    1,\n    0,\n    4,\n    1,\n    17,\n    0,\n    20,\n    2,\n    21,\n    2,\n    22,\n    5,\n    23,\n    5,\n    26,\n    4,\n    39,\n    3,\n    42,\n    4,\n    43,\n    3\n];\nexports.lookupPairs3D = [\n    0,\n    2,\n    1,\n    1,\n    2,\n    2,\n    5,\n    1,\n    6,\n    0,\n    7,\n    0,\n    32,\n    2,\n    34,\n    2,\n    129,\n    1,\n    133,\n    1,\n    160,\n    5,\n    161,\n    5,\n    518,\n    0,\n    519,\n    0,\n    546,\n    4,\n    550,\n    4,\n    645,\n    3,\n    647,\n    3,\n    672,\n    5,\n    673,\n    5,\n    674,\n    4,\n    677,\n    3,\n    678,\n    4,\n    679,\n    3,\n    680,\n    13,\n    681,\n    13,\n    682,\n    12,\n    685,\n    14,\n    686,\n    12,\n    687,\n    14,\n    712,\n    20,\n    714,\n    18,\n    809,\n    21,\n    813,\n    23,\n    840,\n    20,\n    841,\n    21,\n    1198,\n    19,\n    1199,\n    22,\n    1226,\n    18,\n    1230,\n    19,\n    1325,\n    23,\n    1327,\n    22,\n    1352,\n    15,\n    1353,\n    17,\n    1354,\n    15,\n    1357,\n    17,\n    1358,\n    16,\n    1359,\n    16,\n    1360,\n    11,\n    1361,\n    10,\n    1362,\n    11,\n    1365,\n    10,\n    1366,\n    9,\n    1367,\n    9,\n    1392,\n    11,\n    1394,\n    11,\n    1489,\n    10,\n    1493,\n    10,\n    1520,\n    8,\n    1521,\n    8,\n    1878,\n    9,\n    1879,\n    9,\n    1906,\n    7,\n    1910,\n    7,\n    2005,\n    6,\n    2007,\n    6,\n    2032,\n    8,\n    2033,\n    8,\n    2034,\n    7,\n    2037,\n    6,\n    2038,\n    7,\n    2039,\n    6\n];\nexports.lookupPairs4D = [\n    0,\n    3,\n    1,\n    2,\n    2,\n    3,\n    5,\n    2,\n    6,\n    1,\n    7,\n    1,\n    8,\n    3,\n    9,\n    2,\n    10,\n    3,\n    13,\n    2,\n    16,\n    3,\n    18,\n    3,\n    22,\n    1,\n    23,\n    1,\n    24,\n    3,\n    26,\n    3,\n    33,\n    2,\n    37,\n    2,\n    38,\n    1,\n    39,\n    1,\n    41,\n    2,\n    45,\n    2,\n    54,\n    1,\n    55,\n    1,\n    56,\n    0,\n    57,\n    0,\n    58,\n    0,\n    59,\n    0,\n    60,\n    0,\n    61,\n    0,\n    62,\n    0,\n    63,\n    0,\n    256,\n    3,\n    258,\n    3,\n    264,\n    3,\n    266,\n    3,\n    272,\n    3,\n    274,\n    3,\n    280,\n    3,\n    282,\n    3,\n    2049,\n    2,\n    2053,\n    2,\n    2057,\n    2,\n    2061,\n    2,\n    2081,\n    2,\n    2085,\n    2,\n    2089,\n    2,\n    2093,\n    2,\n    2304,\n    9,\n    2305,\n    9,\n    2312,\n    9,\n    2313,\n    9,\n    16390,\n    1,\n    16391,\n    1,\n    16406,\n    1,\n    16407,\n    1,\n    16422,\n    1,\n    16423,\n    1,\n    16438,\n    1,\n    16439,\n    1,\n    16642,\n    8,\n    16646,\n    8,\n    16658,\n    8,\n    16662,\n    8,\n    18437,\n    6,\n    18439,\n    6,\n    18469,\n    6,\n    18471,\n    6,\n    18688,\n    9,\n    18689,\n    9,\n    18690,\n    8,\n    18693,\n    6,\n    18694,\n    8,\n    18695,\n    6,\n    18696,\n    9,\n    18697,\n    9,\n    18706,\n    8,\n    18710,\n    8,\n    18725,\n    6,\n    18727,\n    6,\n    131128,\n    0,\n    131129,\n    0,\n    131130,\n    0,\n    131131,\n    0,\n    131132,\n    0,\n    131133,\n    0,\n    131134,\n    0,\n    131135,\n    0,\n    131352,\n    7,\n    131354,\n    7,\n    131384,\n    7,\n    131386,\n    7,\n    133161,\n    5,\n    133165,\n    5,\n    133177,\n    5,\n    133181,\n    5,\n    133376,\n    9,\n    133377,\n    9,\n    133384,\n    9,\n    133385,\n    9,\n    133400,\n    7,\n    133402,\n    7,\n    133417,\n    5,\n    133421,\n    5,\n    133432,\n    7,\n    133433,\n    5,\n    133434,\n    7,\n    133437,\n    5,\n    147510,\n    4,\n    147511,\n    4,\n    147518,\n    4,\n    147519,\n    4,\n    147714,\n    8,\n    147718,\n    8,\n    147730,\n    8,\n    147734,\n    8,\n    147736,\n    7,\n    147738,\n    7,\n    147766,\n    4,\n    147767,\n    4,\n    147768,\n    7,\n    147770,\n    7,\n    147774,\n    4,\n    147775,\n    4,\n    149509,\n    6,\n    149511,\n    6,\n    149541,\n    6,\n    149543,\n    6,\n    149545,\n    5,\n    149549,\n    5,\n    149558,\n    4,\n    149559,\n    4,\n    149561,\n    5,\n    149565,\n    5,\n    149566,\n    4,\n    149567,\n    4,\n    149760,\n    9,\n    149761,\n    9,\n    149762,\n    8,\n    149765,\n    6,\n    149766,\n    8,\n    149767,\n    6,\n    149768,\n    9,\n    149769,\n    9,\n    149778,\n    8,\n    149782,\n    8,\n    149784,\n    7,\n    149786,\n    7,\n    149797,\n    6,\n    149799,\n    6,\n    149801,\n    5,\n    149805,\n    5,\n    149814,\n    4,\n    149815,\n    4,\n    149816,\n    7,\n    149817,\n    5,\n    149818,\n    7,\n    149821,\n    5,\n    149822,\n    4,\n    149823,\n    4,\n    149824,\n    37,\n    149825,\n    37,\n    149826,\n    36,\n    149829,\n    34,\n    149830,\n    36,\n    149831,\n    34,\n    149832,\n    37,\n    149833,\n    37,\n    149842,\n    36,\n    149846,\n    36,\n    149848,\n    35,\n    149850,\n    35,\n    149861,\n    34,\n    149863,\n    34,\n    149865,\n    33,\n    149869,\n    33,\n    149878,\n    32,\n    149879,\n    32,\n    149880,\n    35,\n    149881,\n    33,\n    149882,\n    35,\n    149885,\n    33,\n    149886,\n    32,\n    149887,\n    32,\n    150080,\n    49,\n    150082,\n    48,\n    150088,\n    49,\n    150098,\n    48,\n    150104,\n    47,\n    150106,\n    47,\n    151873,\n    46,\n    151877,\n    45,\n    151881,\n    46,\n    151909,\n    45,\n    151913,\n    44,\n    151917,\n    44,\n    152128,\n    49,\n    152129,\n    46,\n    152136,\n    49,\n    152137,\n    46,\n    166214,\n    43,\n    166215,\n    42,\n    166230,\n    43,\n    166247,\n    42,\n    166262,\n    41,\n    166263,\n    41,\n    166466,\n    48,\n    166470,\n    43,\n    166482,\n    48,\n    166486,\n    43,\n    168261,\n    45,\n    168263,\n    42,\n    168293,\n    45,\n    168295,\n    42,\n    168512,\n    31,\n    168513,\n    28,\n    168514,\n    31,\n    168517,\n    28,\n    168518,\n    25,\n    168519,\n    25,\n    280952,\n    40,\n    280953,\n    39,\n    280954,\n    40,\n    280957,\n    39,\n    280958,\n    38,\n    280959,\n    38,\n    281176,\n    47,\n    281178,\n    47,\n    281208,\n    40,\n    281210,\n    40,\n    282985,\n    44,\n    282989,\n    44,\n    283001,\n    39,\n    283005,\n    39,\n    283208,\n    30,\n    283209,\n    27,\n    283224,\n    30,\n    283241,\n    27,\n    283256,\n    22,\n    283257,\n    22,\n    297334,\n    41,\n    297335,\n    41,\n    297342,\n    38,\n    297343,\n    38,\n    297554,\n    29,\n    297558,\n    24,\n    297562,\n    29,\n    297590,\n    24,\n    297594,\n    21,\n    297598,\n    21,\n    299365,\n    26,\n    299367,\n    23,\n    299373,\n    26,\n    299383,\n    23,\n    299389,\n    20,\n    299391,\n    20,\n    299584,\n    31,\n    299585,\n    28,\n    299586,\n    31,\n    299589,\n    28,\n    299590,\n    25,\n    299591,\n    25,\n    299592,\n    30,\n    299593,\n    27,\n    299602,\n    29,\n    299606,\n    24,\n    299608,\n    30,\n    299610,\n    29,\n    299621,\n    26,\n    299623,\n    23,\n    299625,\n    27,\n    299629,\n    26,\n    299638,\n    24,\n    299639,\n    23,\n    299640,\n    22,\n    299641,\n    22,\n    299642,\n    21,\n    299645,\n    20,\n    299646,\n    21,\n    299647,\n    20,\n    299648,\n    61,\n    299649,\n    60,\n    299650,\n    61,\n    299653,\n    60,\n    299654,\n    59,\n    299655,\n    59,\n    299656,\n    58,\n    299657,\n    57,\n    299666,\n    55,\n    299670,\n    54,\n    299672,\n    58,\n    299674,\n    55,\n    299685,\n    52,\n    299687,\n    51,\n    299689,\n    57,\n    299693,\n    52,\n    299702,\n    54,\n    299703,\n    51,\n    299704,\n    56,\n    299705,\n    56,\n    299706,\n    53,\n    299709,\n    50,\n    299710,\n    53,\n    299711,\n    50,\n    299904,\n    61,\n    299906,\n    61,\n    299912,\n    58,\n    299922,\n    55,\n    299928,\n    58,\n    299930,\n    55,\n    301697,\n    60,\n    301701,\n    60,\n    301705,\n    57,\n    301733,\n    52,\n    301737,\n    57,\n    301741,\n    52,\n    301952,\n    79,\n    301953,\n    79,\n    301960,\n    76,\n    301961,\n    76,\n    316038,\n    59,\n    316039,\n    59,\n    316054,\n    54,\n    316071,\n    51,\n    316086,\n    54,\n    316087,\n    51,\n    316290,\n    78,\n    316294,\n    78,\n    316306,\n    73,\n    316310,\n    73,\n    318085,\n    77,\n    318087,\n    77,\n    318117,\n    70,\n    318119,\n    70,\n    318336,\n    79,\n    318337,\n    79,\n    318338,\n    78,\n    318341,\n    77,\n    318342,\n    78,\n    318343,\n    77,\n    430776,\n    56,\n    430777,\n    56,\n    430778,\n    53,\n    430781,\n    50,\n    430782,\n    53,\n    430783,\n    50,\n    431000,\n    75,\n    431002,\n    72,\n    431032,\n    75,\n    431034,\n    72,\n    432809,\n    74,\n    432813,\n    69,\n    432825,\n    74,\n    432829,\n    69,\n    433032,\n    76,\n    433033,\n    76,\n    433048,\n    75,\n    433065,\n    74,\n    433080,\n    75,\n    433081,\n    74,\n    447158,\n    71,\n    447159,\n    68,\n    447166,\n    71,\n    447167,\n    68,\n    447378,\n    73,\n    447382,\n    73,\n    447386,\n    72,\n    447414,\n    71,\n    447418,\n    72,\n    447422,\n    71,\n    449189,\n    70,\n    449191,\n    70,\n    449197,\n    69,\n    449207,\n    68,\n    449213,\n    69,\n    449215,\n    68,\n    449408,\n    67,\n    449409,\n    67,\n    449410,\n    66,\n    449413,\n    64,\n    449414,\n    66,\n    449415,\n    64,\n    449416,\n    67,\n    449417,\n    67,\n    449426,\n    66,\n    449430,\n    66,\n    449432,\n    65,\n    449434,\n    65,\n    449445,\n    64,\n    449447,\n    64,\n    449449,\n    63,\n    449453,\n    63,\n    449462,\n    62,\n    449463,\n    62,\n    449464,\n    65,\n    449465,\n    63,\n    449466,\n    65,\n    449469,\n    63,\n    449470,\n    62,\n    449471,\n    62,\n    449472,\n    19,\n    449473,\n    19,\n    449474,\n    18,\n    449477,\n    16,\n    449478,\n    18,\n    449479,\n    16,\n    449480,\n    19,\n    449481,\n    19,\n    449490,\n    18,\n    449494,\n    18,\n    449496,\n    17,\n    449498,\n    17,\n    449509,\n    16,\n    449511,\n    16,\n    449513,\n    15,\n    449517,\n    15,\n    449526,\n    14,\n    449527,\n    14,\n    449528,\n    17,\n    449529,\n    15,\n    449530,\n    17,\n    449533,\n    15,\n    449534,\n    14,\n    449535,\n    14,\n    449728,\n    19,\n    449729,\n    19,\n    449730,\n    18,\n    449734,\n    18,\n    449736,\n    19,\n    449737,\n    19,\n    449746,\n    18,\n    449750,\n    18,\n    449752,\n    17,\n    449754,\n    17,\n    449784,\n    17,\n    449786,\n    17,\n    451520,\n    19,\n    451521,\n    19,\n    451525,\n    16,\n    451527,\n    16,\n    451528,\n    19,\n    451529,\n    19,\n    451557,\n    16,\n    451559,\n    16,\n    451561,\n    15,\n    451565,\n    15,\n    451577,\n    15,\n    451581,\n    15,\n    451776,\n    19,\n    451777,\n    19,\n    451784,\n    19,\n    451785,\n    19,\n    465858,\n    18,\n    465861,\n    16,\n    465862,\n    18,\n    465863,\n    16,\n    465874,\n    18,\n    465878,\n    18,\n    465893,\n    16,\n    465895,\n    16,\n    465910,\n    14,\n    465911,\n    14,\n    465918,\n    14,\n    465919,\n    14,\n    466114,\n    18,\n    466118,\n    18,\n    466130,\n    18,\n    466134,\n    18,\n    467909,\n    16,\n    467911,\n    16,\n    467941,\n    16,\n    467943,\n    16,\n    468160,\n    13,\n    468161,\n    13,\n    468162,\n    13,\n    468163,\n    13,\n    468164,\n    13,\n    468165,\n    13,\n    468166,\n    13,\n    468167,\n    13,\n    580568,\n    17,\n    580570,\n    17,\n    580585,\n    15,\n    580589,\n    15,\n    580598,\n    14,\n    580599,\n    14,\n    580600,\n    17,\n    580601,\n    15,\n    580602,\n    17,\n    580605,\n    15,\n    580606,\n    14,\n    580607,\n    14,\n    580824,\n    17,\n    580826,\n    17,\n    580856,\n    17,\n    580858,\n    17,\n    582633,\n    15,\n    582637,\n    15,\n    582649,\n    15,\n    582653,\n    15,\n    582856,\n    12,\n    582857,\n    12,\n    582872,\n    12,\n    582873,\n    12,\n    582888,\n    12,\n    582889,\n    12,\n    582904,\n    12,\n    582905,\n    12,\n    596982,\n    14,\n    596983,\n    14,\n    596990,\n    14,\n    596991,\n    14,\n    597202,\n    11,\n    597206,\n    11,\n    597210,\n    11,\n    597214,\n    11,\n    597234,\n    11,\n    597238,\n    11,\n    597242,\n    11,\n    597246,\n    11,\n    599013,\n    10,\n    599015,\n    10,\n    599021,\n    10,\n    599023,\n    10,\n    599029,\n    10,\n    599031,\n    10,\n    599037,\n    10,\n    599039,\n    10,\n    599232,\n    13,\n    599233,\n    13,\n    599234,\n    13,\n    599235,\n    13,\n    599236,\n    13,\n    599237,\n    13,\n    599238,\n    13,\n    599239,\n    13,\n    599240,\n    12,\n    599241,\n    12,\n    599250,\n    11,\n    599254,\n    11,\n    599256,\n    12,\n    599257,\n    12,\n    599258,\n    11,\n    599262,\n    11,\n    599269,\n    10,\n    599271,\n    10,\n    599272,\n    12,\n    599273,\n    12,\n    599277,\n    10,\n    599279,\n    10,\n    599282,\n    11,\n    599285,\n    10,\n    599286,\n    11,\n    599287,\n    10,\n    599288,\n    12,\n    599289,\n    12,\n    599290,\n    11,\n    599293,\n    10,\n    599294,\n    11,\n    599295,\n    10\n];\nexports.p2D = [\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    2,\n    2,\n    0,\n    1,\n    2,\n    0,\n    2,\n    1,\n    0,\n    0,\n    0\n];\nexports.p3D = [\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    2,\n    1,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    2,\n    1,\n    0,\n    3,\n    1,\n    2,\n    0,\n    1,\n    3,\n    2,\n    0,\n    1,\n    3,\n    1,\n    0,\n    2,\n    1,\n    3,\n    0,\n    2,\n    1,\n    3,\n    0,\n    1,\n    2,\n    1,\n    1,\n    1,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    1,\n    1,\n    0,\n    1,\n    0,\n    2,\n    0,\n    2,\n    0,\n    1,\n    1,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    3,\n    1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    3,\n    1,\n    1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    2,\n    0\n];\nexports.p4D = [\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    -1,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    1,\n    0,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    -1,\n    0,\n    1,\n    0,\n    0,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    0,\n    2,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    2,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    2,\n    1,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    0,\n    2,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    2,\n    0,\n    0,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    1,\n    4,\n    2,\n    1,\n    1,\n    0,\n    4,\n    1,\n    2,\n    1,\n    0,\n    4,\n    1,\n    1,\n    2,\n    0,\n    1,\n    4,\n    2,\n    1,\n    0,\n    1,\n    4,\n    1,\n    2,\n    0,\n    1,\n    4,\n    1,\n    1,\n    0,\n    2,\n    1,\n    4,\n    2,\n    0,\n    1,\n    1,\n    4,\n    1,\n    0,\n    2,\n    1,\n    4,\n    1,\n    0,\n    1,\n    2,\n    1,\n    4,\n    0,\n    2,\n    1,\n    1,\n    4,\n    0,\n    1,\n    2,\n    1,\n    4,\n    0,\n    1,\n    1,\n    2,\n    1,\n    2,\n    1,\n    1,\n    0,\n    0,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    1,\n    2,\n    1,\n    0,\n    1,\n    0,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    1,\n    2,\n    0,\n    1,\n    1,\n    0,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    1,\n    2,\n    1,\n    0,\n    0,\n    1,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    1,\n    2,\n    0,\n    1,\n    0,\n    1,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    1,\n    2,\n    0,\n    0,\n    1,\n    1,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    2,\n    3,\n    1,\n    1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    1,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    0,\n    1,\n    1,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    1,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    1,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    3,\n    1,\n    0,\n    1,\n    1,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    1,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    3,\n    1,\n    0,\n    1,\n    1,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    3,\n    0,\n    1,\n    1,\n    1,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    1,\n    -1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    -1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    0,\n    1,\n    1,\n    1,\n    0,\n    -1,\n    1,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    3,\n    1,\n    1,\n    0,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    0,\n    1,\n    0,\n    0,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    0,\n    0,\n    1,\n    0,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    1,\n    1,\n    0,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    0,\n    1,\n    0,\n    0,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    1,\n    1,\n    0,\n    0,\n    0,\n    2,\n    2,\n    0,\n    0,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    1,\n    0,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    1,\n    0,\n    0,\n    2,\n    0,\n    2,\n    0,\n    0,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    1,\n    0,\n    2,\n    0,\n    0,\n    2,\n    0,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    1,\n    0,\n    0,\n    0,\n    1,\n    2,\n    0,\n    0,\n    0,\n    2,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    4,\n    1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    2,\n    1,\n    1,\n    1,\n    -1,\n    3,\n    3,\n    2,\n    1,\n    0,\n    0,\n    3,\n    1,\n    2,\n    0,\n    0,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    2,\n    1,\n    1,\n    -1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    1,\n    0,\n    3,\n    1,\n    0,\n    2,\n    0,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    2,\n    0,\n    0,\n    1,\n    3,\n    1,\n    0,\n    0,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    2,\n    1,\n    -1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    1,\n    0,\n    3,\n    0,\n    1,\n    2,\n    0,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    2,\n    0,\n    1,\n    3,\n    0,\n    1,\n    0,\n    2,\n    2,\n    -1,\n    1,\n    1,\n    1,\n    3,\n    3,\n    0,\n    0,\n    2,\n    1,\n    3,\n    0,\n    0,\n    1,\n    2,\n    2,\n    -1,\n    1,\n    1,\n    1\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar Contribution2 = /** @class */ (function () {\n    function Contribution2(multiplier, xsb, ysb) {\n        this.dx = -xsb - multiplier * constants_1.SQUISH_2D;\n        this.dy = -ysb - multiplier * constants_1.SQUISH_2D;\n        this.xsb = xsb;\n        this.ysb = ysb;\n    }\n    return Contribution2;\n}());\nvar Contribution3 = /** @class */ (function () {\n    function Contribution3(multiplier, xsb, ysb, zsb) {\n        this.dx = -xsb - multiplier * constants_1.SQUISH_3D;\n        this.dy = -ysb - multiplier * constants_1.SQUISH_3D;\n        this.dz = -zsb - multiplier * constants_1.SQUISH_3D;\n        this.xsb = xsb;\n        this.ysb = ysb;\n        this.zsb = zsb;\n    }\n    return Contribution3;\n}());\nvar Contribution4 = /** @class */ (function () {\n    function Contribution4(multiplier, xsb, ysb, zsb, wsb) {\n        this.dx = -xsb - multiplier * constants_1.SQUISH_4D;\n        this.dy = -ysb - multiplier * constants_1.SQUISH_4D;\n        this.dz = -zsb - multiplier * constants_1.SQUISH_4D;\n        this.dw = -wsb - multiplier * constants_1.SQUISH_4D;\n        this.xsb = xsb;\n        this.ysb = ysb;\n        this.zsb = zsb;\n        this.wsb = wsb;\n    }\n    return Contribution4;\n}());\nfunction shuffleSeed(seed) {\n    var newSeed = new Uint32Array(1);\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\n    return newSeed;\n}\nvar OpenSimplexNoise = /** @class */ (function () {\n    function OpenSimplexNoise(clientSeed) {\n        this.initialize();\n        this.perm = new Uint8Array(256);\n        this.perm2D = new Uint8Array(256);\n        this.perm3D = new Uint8Array(256);\n        this.perm4D = new Uint8Array(256);\n        var source = new Uint8Array(256);\n        for (var i = 0; i < 256; i++)\n            source[i] = i;\n        var seed = new Uint32Array(1);\n        seed[0] = clientSeed;\n        seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\n        for (var i = 255; i >= 0; i--) {\n            seed = shuffleSeed(seed);\n            var r = new Uint32Array(1);\n            r[0] = (seed[0] + 31) % (i + 1);\n            if (r[0] < 0)\n                r[0] += i + 1;\n            this.perm[i] = source[r[0]];\n            this.perm2D[i] = this.perm[i] & 0x0e;\n            this.perm3D[i] = (this.perm[i] % 24) * 3;\n            this.perm4D[i] = this.perm[i] & 0xfc;\n            source[r[0]] = source[i];\n        }\n    }\n    OpenSimplexNoise.prototype.array2D = function (width, height) {\n        var output = new Array(width);\n        for (var x = 0; x < width; x++) {\n            output[x] = new Array(height);\n            for (var y = 0; y < height; y++) {\n                output[x][y] = this.noise2D(x, y);\n            }\n        }\n        return output;\n    };\n    OpenSimplexNoise.prototype.array3D = function (width, height, depth) {\n        var output = new Array(width);\n        for (var x = 0; x < width; x++) {\n            output[x] = new Array(height);\n            for (var y = 0; y < height; y++) {\n                output[x][y] = new Array(depth);\n                for (var z = 0; z < depth; z++) {\n                    output[x][y][z] = this.noise3D(x, y, z);\n                }\n            }\n        }\n        return output;\n    };\n    OpenSimplexNoise.prototype.array4D = function (width, height, depth, wLength) {\n        var output = new Array(width);\n        for (var x = 0; x < width; x++) {\n            output[x] = new Array(height);\n            for (var y = 0; y < height; y++) {\n                output[x][y] = new Array(depth);\n                for (var z = 0; z < depth; z++) {\n                    output[x][y][z] = new Array(wLength);\n                    for (var w = 0; w < wLength; w++) {\n                        output[x][y][z][w] = this.noise4D(x, y, z, w);\n                    }\n                }\n            }\n        }\n        return output;\n    };\n    OpenSimplexNoise.prototype.noise2D = function (x, y) {\n        var stretchOffset = (x + y) * constants_1.STRETCH_2D;\n        var xs = x + stretchOffset;\n        var ys = y + stretchOffset;\n        var xsb = Math.floor(xs);\n        var ysb = Math.floor(ys);\n        var squishOffset = (xsb + ysb) * constants_1.SQUISH_2D;\n        var dx0 = x - (xsb + squishOffset);\n        var dy0 = y - (ysb + squishOffset);\n        var xins = xs - xsb;\n        var yins = ys - ysb;\n        var inSum = xins + yins;\n        var hash = (xins - yins + 1) |\n            (inSum << 1) |\n            ((inSum + yins) << 2) |\n            ((inSum + xins) << 4);\n        var value = 0;\n        for (var c = this.lookup2D[hash]; c !== undefined; c = c.next) {\n            var dx = dx0 + c.dx;\n            var dy = dy0 + c.dy;\n            var attn = 2 - dx * dx - dy * dy;\n            if (attn > 0) {\n                var px = xsb + c.xsb;\n                var py = ysb + c.ysb;\n                var indexPartA = this.perm[px & 0xff];\n                var index = this.perm2D[(indexPartA + py) & 0xff];\n                var valuePart = constants_1.gradients2D[index] * dx + constants_1.gradients2D[index + 1] * dy;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * constants_1.NORM_2D;\n    };\n    OpenSimplexNoise.prototype.noise3D = function (x, y, z) {\n        var stretchOffset = (x + y + z) * constants_1.STRETCH_3D;\n        var xs = x + stretchOffset;\n        var ys = y + stretchOffset;\n        var zs = z + stretchOffset;\n        var xsb = Math.floor(xs);\n        var ysb = Math.floor(ys);\n        var zsb = Math.floor(zs);\n        var squishOffset = (xsb + ysb + zsb) * constants_1.SQUISH_3D;\n        var dx0 = x - (xsb + squishOffset);\n        var dy0 = y - (ysb + squishOffset);\n        var dz0 = z - (zsb + squishOffset);\n        var xins = xs - xsb;\n        var yins = ys - ysb;\n        var zins = zs - zsb;\n        var inSum = xins + yins + zins;\n        var hash = (yins - zins + 1) |\n            ((xins - yins + 1) << 1) |\n            ((xins - zins + 1) << 2) |\n            (inSum << 3) |\n            ((inSum + zins) << 5) |\n            ((inSum + yins) << 7) |\n            ((inSum + xins) << 9);\n        var value = 0;\n        for (var c = this.lookup3D[hash]; c !== undefined; c = c.next) {\n            var dx = dx0 + c.dx;\n            var dy = dy0 + c.dy;\n            var dz = dz0 + c.dz;\n            var attn = 2 - dx * dx - dy * dy - dz * dz;\n            if (attn > 0) {\n                var px = xsb + c.xsb;\n                var py = ysb + c.ysb;\n                var pz = zsb + c.zsb;\n                var indexPartA = this.perm[px & 0xff];\n                var indexPartB = this.perm[(indexPartA + py) & 0xff];\n                var index = this.perm3D[(indexPartB + pz) & 0xff];\n                var valuePart = constants_1.gradients3D[index] * dx +\n                    constants_1.gradients3D[index + 1] * dy +\n                    constants_1.gradients3D[index + 2] * dz;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * constants_1.NORM_3D;\n    };\n    OpenSimplexNoise.prototype.noise4D = function (x, y, z, w) {\n        var stretchOffset = (x + y + z + w) * constants_1.STRETCH_4D;\n        var xs = x + stretchOffset;\n        var ys = y + stretchOffset;\n        var zs = z + stretchOffset;\n        var ws = w + stretchOffset;\n        var xsb = Math.floor(xs);\n        var ysb = Math.floor(ys);\n        var zsb = Math.floor(zs);\n        var wsb = Math.floor(ws);\n        var squishOffset = (xsb + ysb + zsb + wsb) * constants_1.SQUISH_4D;\n        var dx0 = x - (xsb + squishOffset);\n        var dy0 = y - (ysb + squishOffset);\n        var dz0 = z - (zsb + squishOffset);\n        var dw0 = w - (wsb + squishOffset);\n        var xins = xs - xsb;\n        var yins = ys - ysb;\n        var zins = zs - zsb;\n        var wins = ws - wsb;\n        var inSum = xins + yins + zins + wins;\n        var hash = (zins - wins + 1) |\n            ((yins - zins + 1) << 1) |\n            ((yins - wins + 1) << 2) |\n            ((xins - yins + 1) << 3) |\n            ((xins - zins + 1) << 4) |\n            ((xins - wins + 1) << 5) |\n            (inSum << 6) |\n            ((inSum + wins) << 8) |\n            ((inSum + zins) << 11) |\n            ((inSum + yins) << 14) |\n            ((inSum + xins) << 17);\n        var value = 0;\n        for (var c = this.lookup4D[hash]; c !== undefined; c = c.next) {\n            var dx = dx0 + c.dx;\n            var dy = dy0 + c.dy;\n            var dz = dz0 + c.dz;\n            var dw = dw0 + c.dw;\n            var attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\n            if (attn > 0) {\n                var px = xsb + c.xsb;\n                var py = ysb + c.ysb;\n                var pz = zsb + c.zsb;\n                var pw = wsb + c.wsb;\n                var indexPartA = this.perm[px & 0xff];\n                var indexPartB = this.perm[(indexPartA + py) & 0xff];\n                var indexPartC = this.perm[(indexPartB + pz) & 0xff];\n                var index = this.perm4D[(indexPartC + pw) & 0xff];\n                var valuePart = constants_1.gradients4D[index] * dx +\n                    constants_1.gradients4D[index + 1] * dy +\n                    constants_1.gradients4D[index + 2] * dz +\n                    constants_1.gradients4D[index + 3] * dw;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * constants_1.NORM_4D;\n    };\n    OpenSimplexNoise.prototype.initialize = function () {\n        var contributions2D = [];\n        for (var i = 0; i < constants_1.p2D.length; i += 4) {\n            var baseSet = constants_1.base2D[constants_1.p2D[i]];\n            var previous = null;\n            var current = null;\n            for (var k = 0; k < baseSet.length; k += 3) {\n                current = new Contribution2(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\n                if (previous === null)\n                    contributions2D[i / 4] = current;\n                else\n                    previous.next = current;\n                previous = current;\n            }\n            current.next = new Contribution2(constants_1.p2D[i + 1], constants_1.p2D[i + 2], constants_1.p2D[i + 3]);\n        }\n        this.lookup2D = [];\n        for (var i = 0; i < constants_1.lookupPairs2D.length; i += 2) {\n            this.lookup2D[constants_1.lookupPairs2D[i]] = contributions2D[constants_1.lookupPairs2D[i + 1]];\n        }\n        var contributions3D = [];\n        for (var i = 0; i < constants_1.p3D.length; i += 9) {\n            var baseSet = constants_1.base3D[constants_1.p3D[i]];\n            var previous = null;\n            var current = null;\n            for (var k = 0; k < baseSet.length; k += 4) {\n                current = new Contribution3(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\n                if (previous === null)\n                    contributions3D[i / 9] = current;\n                else\n                    previous.next = current;\n                previous = current;\n            }\n            current.next = new Contribution3(constants_1.p3D[i + 1], constants_1.p3D[i + 2], constants_1.p3D[i + 3], constants_1.p3D[i + 4]);\n            current.next.next = new Contribution3(constants_1.p3D[i + 5], constants_1.p3D[i + 6], constants_1.p3D[i + 7], constants_1.p3D[i + 8]);\n        }\n        this.lookup3D = [];\n        for (var i = 0; i < constants_1.lookupPairs3D.length; i += 2) {\n            this.lookup3D[constants_1.lookupPairs3D[i]] = contributions3D[constants_1.lookupPairs3D[i + 1]];\n        }\n        var contributions4D = [];\n        for (var i = 0; i < constants_1.p4D.length; i += 16) {\n            var baseSet = constants_1.base4D[constants_1.p4D[i]];\n            var previous = null;\n            var current = null;\n            for (var k = 0; k < baseSet.length; k += 5) {\n                current = new Contribution4(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\n                if (previous === null)\n                    contributions4D[i / 16] = current;\n                else\n                    previous.next = current;\n                previous = current;\n            }\n            current.next = new Contribution4(constants_1.p4D[i + 1], constants_1.p4D[i + 2], constants_1.p4D[i + 3], constants_1.p4D[i + 4], constants_1.p4D[i + 5]);\n            current.next.next = new Contribution4(constants_1.p4D[i + 6], constants_1.p4D[i + 7], constants_1.p4D[i + 8], constants_1.p4D[i + 9], constants_1.p4D[i + 10]);\n            current.next.next.next = new Contribution4(constants_1.p4D[i + 11], constants_1.p4D[i + 12], constants_1.p4D[i + 13], constants_1.p4D[i + 14], constants_1.p4D[i + 15]);\n        }\n        this.lookup4D = [];\n        for (var i = 0; i < constants_1.lookupPairs4D.length; i += 2) {\n            this.lookup4D[constants_1.lookupPairs4D[i]] = contributions4D[constants_1.lookupPairs4D[i + 1]];\n        }\n    };\n    return OpenSimplexNoise;\n}());\nexports.default = OpenSimplexNoise;\n","'use strict'\n\nconst HIGH_SURROGATE_START = 0xd800\nconst HIGH_SURROGATE_END = 0xdbff\n\nconst LOW_SURROGATE_START = 0xdc00\n\nconst REGIONAL_INDICATOR_START = 0x1f1e6\nconst REGIONAL_INDICATOR_END = 0x1f1ff\n\nconst FITZPATRICK_MODIFIER_START = 0x1f3fb\nconst FITZPATRICK_MODIFIER_END = 0x1f3ff\n\nconst VARIATION_MODIFIER_START = 0xfe00\nconst VARIATION_MODIFIER_END = 0xfe0f\n\nconst DIACRITICAL_MARKS_START = 0x20d0\nconst DIACRITICAL_MARKS_END = 0x20ff\n\nconst ZWJ = 0x200d\n\nconst GRAPHEMS = [\n  0x0308, // ( ◌̈ ) COMBINING DIAERESIS\n  0x0937, // ( ष ) DEVANAGARI LETTER SSA\n  0x0937, // ( ष ) DEVANAGARI LETTER SSA\n  0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n  0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n  0x0BA8, // ( ந ) TAMIL LETTER NA\n  0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\n  0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\n  0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\n  0x0E33, // ( ำ ) THAI CHARACTER SARA AM\n  0x0E40, // ( เ ) THAI CHARACTER SARA E\n  0x0E49, // ( เ ) THAI CHARACTER MAI THO\n  0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\n  0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\n  0x11A8 // ( ᆨ ) HANGUL JONGSEONG KIYEOK\n]\n\nfunction runes (string) {\n  if (typeof string !== 'string') {\n    throw new Error('string cannot be undefined or null')\n  }\n  const result = []\n  let i = 0\n  let increment = 0\n  while (i < string.length) {\n    increment += nextUnits(i + increment, string)\n    if (isGraphem(string[i + increment])) {\n      increment++\n    }\n    if (isVariationSelector(string[i + increment])) {\n      increment++\n    }\n    if (isDiacriticalMark(string[i + increment])) {\n      increment++\n    }\n    if (isZeroWidthJoiner(string[i + increment])) {\n      increment++\n      continue\n    }\n    result.push(string.substring(i, i + increment))\n    i += increment\n    increment = 0\n  }\n  return result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\nfunction nextUnits (i, string) {\n  const current = string[i]\n  // If we don't have a value that is part of a surrogate pair, or we're at\n  // the end, only take the value at i\n  if (!isFirstOfSurrogatePair(current) || i === string.length - 1) {\n    return 1\n  }\n\n  const currentPair = current + string[i + 1]\n  let nextPair = string.substring(i + 2, i + 5)\n\n  // Country flags are comprised of two regional indicator symbols,\n  // each represented by a surrogate pair.\n  // See http://emojipedia.org/flags/\n  // If both pairs are regional indicator symbols, take 4\n  if (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair)) {\n    return 4\n  }\n\n  // If the next pair make a Fitzpatrick skin tone\n  // modifier, take 4\n  // See http://emojipedia.org/modifiers/\n  // Technically, only some code points are meant to be\n  // combined with the skin tone modifiers. This function\n  // does not check the current pair to see if it is\n  // one of them.\n  if (isFitzpatrickModifier(nextPair)) {\n    return 4\n  }\n  return 2\n}\n\nfunction isFirstOfSurrogatePair (string) {\n  return string && betweenInclusive(string[0].charCodeAt(0), HIGH_SURROGATE_START, HIGH_SURROGATE_END)\n}\n\nfunction isRegionalIndicator (string) {\n  return betweenInclusive(codePointFromSurrogatePair(string), REGIONAL_INDICATOR_START, REGIONAL_INDICATOR_END)\n}\n\nfunction isFitzpatrickModifier (string) {\n  return betweenInclusive(codePointFromSurrogatePair(string), FITZPATRICK_MODIFIER_START, FITZPATRICK_MODIFIER_END)\n}\n\nfunction isVariationSelector (string) {\n  return typeof string === 'string' && betweenInclusive(string.charCodeAt(0), VARIATION_MODIFIER_START, VARIATION_MODIFIER_END)\n}\n\nfunction isDiacriticalMark (string) {\n  return typeof string === 'string' && betweenInclusive(string.charCodeAt(0), DIACRITICAL_MARKS_START, DIACRITICAL_MARKS_END)\n}\n\nfunction isGraphem (string) {\n  return typeof string === 'string' && GRAPHEMS.indexOf(string.charCodeAt(0)) !== -1\n}\n\nfunction isZeroWidthJoiner (string) {\n  return typeof string === 'string' && string.charCodeAt(0) === ZWJ\n}\n\nfunction codePointFromSurrogatePair (pair) {\n  const highOffset = pair.charCodeAt(0) - HIGH_SURROGATE_START\n  const lowOffset = pair.charCodeAt(1) - LOW_SURROGATE_START\n  return (highOffset << 10) + lowOffset + 0x10000\n}\n\nfunction betweenInclusive (value, lower, upper) {\n  return value >= lower && value <= upper\n}\n\nfunction substring (string, start, width) {\n  const chars = runes(string)\n  if (start === undefined) {\n    return string\n  }\n  if (start >= chars.length) {\n    return ''\n  }\n  const rest = chars.length - start\n  const stringWidth = width === undefined ? rest : width\n  let endIndex = start + stringWidth\n  if (endIndex > (start + rest)) {\n    endIndex = undefined\n  }\n  return chars.slice(start, endIndex).join('')\n}\n\nmodule.exports = runes\nmodule.exports.substr = substring\n","import \"./styles.css\";\nimport OpenSimplexNoise from \"open-simplex-noise\";\nimport runes from \"runes\";\nconst openSimplex = new OpenSimplexNoise(\"week7\" + Date.now());\n\nconst phrases = [\"☜\", \"🌀🧶\", \"チップチューン\", \"🍂🍃🍁\", \"☻\", \"✌︎\", \"👽\", \"✐\"];\nconst colors = [\"#FF2600\", \"#00FA92\", \"#FFD479\", \"#FFFFFF\"];\n\nlet text = phrases[Math.floor(Math.random() * phrases.length)];\nlet font = \"IBM Plex Mono, monospace\";\nlet splitText = true;\nlet letters = [];\nlet maxLetterWidth = 0;\nlet dpr = window.devicePixelRatio;\n\nlet backgroundColor = \"#212121\";\nlet textColor = colors[Math.floor(Math.random() * colors.length)];\n\nconst canvas = document.createElement(\"canvas\");\nconst context = canvas.getContext(\"2d\");\n\nconst textCanvas = document.createElement(\"canvas\");\nconst textContext = textCanvas.getContext(\"2d\");\n\nfunction drawText() {\n  textContext.fillStyle = textColor;\n  textContext.textBaseline = \"middle\";\n  textContext.textAlign = \"center\";\n  textContext.font = `${\"normal\"} ${128 * dpr}px ${font}`;\n\n  maxLetterWidth = 0;\n\n  if (splitText) {\n    letters = runes(text);\n\n    letters.forEach(letter => {\n      maxLetterWidth = Math.max(\n        maxLetterWidth,\n        textContext.measureText(letter).width\n      );\n    });\n\n    textCanvas.width = maxLetterWidth * letters.length;\n    textCanvas.height = maxLetterWidth * 3;\n  } else {\n    const textWidth = textContext.measureText(text).width;\n    textCanvas.width = textWidth;\n    textCanvas.height = textWidth * 1.38;\n    maxLetterWidth = textWidth;\n  }\n\n  textContext.fillStyle = textColor;\n  textContext.textBaseline = \"middle\";\n  textContext.textAlign = \"center\";\n  textContext.font = `${\"normal\"} ${128 * dpr}px ${font}`;\n\n  if (splitText) {\n    textContext.textBaseline = \"middle\";\n    textContext.textAlign = \"left\";\n    for (let i = 0; i < letters.length; ++i) {\n      textContext.fillText(\n        letters[i],\n        i * maxLetterWidth,\n        textCanvas.height / 2\n      );\n    }\n  } else {\n    textContext.fillText(text, textCanvas.width / 2, textCanvas.height / 2);\n  }\n}\n\nfunction resize() {\n  const { innerWidth, innerHeight } = window;\n  dpr = window.devicePixelRatio;\n\n  canvas.width = innerWidth * dpr;\n  canvas.height = innerHeight * dpr;\n  canvas.style.width = `${innerWidth}px`;\n  canvas.style.height = `${innerHeight}px`;\n\n  context.fillStyle = backgroundColor;\n  drawText();\n}\n\nresize();\n\ndocument.body.appendChild(canvas);\n\nwindow.addEventListener(\"resize\", resize);\n\nlet raf;\n\nfunction loop(delta) {\n  raf = requestAnimationFrame(loop);\n\n  const { width, height } = canvas;\n\n  context.save();\n  context.globalAlpha = 1;\n  context.fillRect(0, 0, width, height);\n  context.restore();\n\n  const divisionWidth = width / maxLetterWidth;\n  const divisionHeight = height / maxLetterWidth;\n\n  if (maxLetterWidth < 1) {\n    return;\n  }\n\n  let letterPosition = 0;\n\n  for (let y = -1; y < divisionHeight + 1; y += 1) {\n    for (let x = -1; x < divisionWidth + 1; x += 1) {\n      const sinX = Math.sin(delta / 1000 + x / 5);\n      const sinY = Math.cos(delta / 900 + y / 5);\n\n      const x1 = maxLetterWidth * x;\n      const y1 = maxLetterWidth * y;\n\n      const scale = openSimplex.noise3D(x / 8, y / 8, delta / 2000);\n      // const scale = perlin3.gen(x / 16, y / 16, frames / 80)\n\n      context.save();\n      context.translate(\n        x1 + scale * sinX * maxLetterWidth,\n        y1 + scale * sinY * maxLetterWidth\n      );\n      context.rotate(delta / 10000 + Math.PI * scale);\n      context.scale(scale * 0.5 + 0.5, scale * 0.5 + 0.5);\n      if (splitText) {\n        context.drawImage(\n          textCanvas,\n\n          letterPosition * maxLetterWidth,\n          0,\n          maxLetterWidth,\n          textCanvas.height,\n\n          -maxLetterWidth / 2,\n          -textCanvas.height / 2,\n          maxLetterWidth,\n          textCanvas.height\n        );\n\n        letterPosition += 1;\n\n        if (letterPosition > letters.length - 1) {\n          letterPosition = 0;\n        }\n      } else {\n        context.drawImage(\n          textCanvas,\n          -textCanvas.width / 2,\n          -textCanvas.height / 2\n        );\n      }\n      context.restore();\n    }\n  }\n}\n\nasync function start() {\n  resize();\n  requestAnimationFrame(loop);\n}\n\nstart();\n"]}